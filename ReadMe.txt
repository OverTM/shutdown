================================================================================
                   软件使用说明
===============================================================================

1.此关机程序可实现输入关机时间或延迟分钟数定时关机，只需选中其后面的圆形按钮。

2.晚上时想在次日凌晨关机，输入定时时间后需选中“第二天”按钮。

3.此关机程序可实现2天内关机（原因由于在作两个时间相减发生错误，只好设计“第二天”按钮），已经够用。

4.此关机程序点击“启动”时，默认使用“输入定时时间”（由于调试很久不能使定时时间后面的按钮默认选中），使用者注意就行了。

5.软件中使用了3个定时器，Timer1 实现右侧显示系统时间（日期是静态的），Timer2 实现定时关机，Timer3 实现倒计时提示，源码已给出注释。

6.“隐藏”使软件隐藏进托盘，功能未实现。“系统信息”会显示系统信息，功能未实现。

================================================================================
    MICROSOFT 基础类库: 自动关机 项目概述
===============================================================================

应用程序向导已为您创建此 自动关机 应用程序。此应用程序不仅演示使用 Microsoft 基础类的基本知识，而且可作为编写应用程序的起点。

此文件包含组成 自动关机 应用程序的各个文件的内容摘要。

自动关机.vcproj
    这是使用应用程序向导生成的 VC++ 项目的主项目文件。
    它包含有关生成文件的 Visual C++ 版本的信息，以及有关使用应用程序向导选择的平台、配置和项目功能的信息。

自动关机.h
    这是应用程序的主要头文件。它包括其他项目特定的头文件(包括 Resource.h)，并声明 CShutdownApp 应用程序类。

自动关机.cpp
    这是包含应用程序类 CShutdownApp 的主要应用程序源文件。

自动关机.rc
    这是程序使用的所有 Microsoft Windows 资源的列表。它包括 RES 子目录中存储的图标、位图和光标。此文件可以直接在 Microsoft Visual C++ 中进行编辑。项目资源位于 2052 中。

res\自动关机.ico
    这是用作应用程序图标的图标文件。此图标包括在主要资源文件 自动关机.rc 中。

res\My.rc2
    此文件包含不是由 Microsoft Visual C++ 编辑的资源。您应该将不可由资源编辑器编辑的所有资源放在此文件中。


/////////////////////////////////////////////////////////////////////////////

应用程序向导创建一个对话框类:

ShutdownDlg.h，ShutdownDlg.cpp - 对话框
    这些文件包含 CShutdownDlg 类。该类定义应用程序主对话框的行为。该对话框的模板位于 自动关机.rc 中，该文件可以在 Microsoft Visual C++ 中进行编辑。


/////////////////////////////////////////////////////////////////////////////

其他标准文件:

StdAfx.h, StdAfx.cpp
    这些文件用于生成名为 自动关机.pch 的预编译头(PCH)文件和名为 StdAfx.obj 的预编译类型文件。

Resource.h
    这是标准头文件，它定义新资源 ID。
    Microsoft Visual C++ 将读取并更新此文件。

自动关机.manifest
	Windows XP 使用应用程序清单文件描述应用程序	对特定版本并行程序集的依赖性。加载程序使用此	信息从程序集缓存加载相应程序集或	从应用程序加载私有信息。应用程序清单可能作为	与应用程序可执行文件安装在同一文件夹中的外部 .manifest 文件包括在内以便重新发布，	也可能以资源的形式包括在该可执行文件中。
/////////////////////////////////////////////////////////////////////////////

其他注释:

应用程序向导使用“TODO:”指示应添加或自定义的源代码部分。

如果应用程序在共享 DLL 中使用 MFC,则将需要重新发布 MFC DLL。如果应用程序所用与操作系统的区域设置不同，则也将必须重新发布对应的本地化资源 MFC90XXX.DLL。
有关这两个主题的详细信息，请参阅 MSDN 文档中有关重新发布 Visual C++ 应用程序的部分。

/////////////////////////////////////////////////////////////////////////////